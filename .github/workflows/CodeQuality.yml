on:
  workflow_call:
   secrets:
    
      GITTOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      
   inputs:
      
      runnerName:
        required: true
        default: "ubuntu-latest"
        type: string
        
      java-version:
         required: true
         default: "11.0.4"
         type: string
jobs:
 sonar:
      name:  SonarCloud Scanning
      runs-on: ${{inputs.runnerName}}
      steps:
        - uses: actions/checkout@v1
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
           java-version: ${{inputs.java-version}}
        - name: SonarCloud Scanning
          run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          env:
           GITTOKEN: ${{ secrets.GITTOKEN }}
           
 check_quality:
     name: Check Sonar Report Quality
     runs-on: ${{inputs.runnerName}}
     needs: [sonar]
     env:
      CODE_SMELLS_THRESHOLD: "16"
      VULNERABILITIES_THRESHOLD: "0"
      BUGS_THRESHOLD: "0"
     steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Retrieve SonarCloud Metrics
        id: retrieve_metrics
        run: |
          SONAR_RESPONSE=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
                          "https://sonarcloud.io/api/measures/component?component=demo-organisation_demo-project&metricKeys=code_smells,vulnerabilities,bugs")
          echo "::set-output name=sonar_response::$SONAR_RESPONSE"
      - name: Check Sonar Report
        run: |
          SONAR_RESPONSE='${{ steps.retrieve_metrics.outputs.sonar_response }}'
          CODE_SMELLS=$(echo "$SONAR_RESPONSE" | jq -r '.component.measures[] | select(.metric == "code_smells") | .value')
          VULNERABILITIES=$(echo "$SONAR_RESPONSE" | jq -r '.component.measures[] | select(.metric == "vulnerabilities") | .value')
          BUGS=$(echo "$SONAR_RESPONSE" | jq -r '.component.measures[] | select(.metric == "bugs") | .value')
          echo "CODE_SMELLS: $CODE_SMELLS"
          echo "VULNERABILITIES: $VULNERABILITIES"
          echo "BUGS: $BUGS"
          if [[ $CODE_SMELLS -gt $CODE_SMELLS_THRESHOLD || $VULNERABILITIES -gt $VULNERABILITIES_THRESHOLD || $BUGS -gt $BUGS_THRESHOLD ]]; then
          echo "Sonar report does not meet quality standards. Exiting with an error."
          exit 1
          else
          echo "Sonar report meets quality standards."
          fi
